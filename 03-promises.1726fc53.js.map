{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,cAAc,IAGhB,MAAMC,EAASC,SAASC,cAAc,SAkBtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAO,C,SACXL,E,MACAC,GAGF,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTP,EAAgBK,EAAQF,GAAQG,EAAOH,EAAK,GAC3CJ,EAAM,G,CAObL,EAAOc,iBAAiB,UAAUC,IAChCA,EAAEC,iBACF,MAAMC,EApCR,SAAwBF,GACtB,MACEG,UACEb,OAASc,MAAOC,GAChBC,MAAQF,MAAOG,GACfC,QAAUJ,MAAOK,KAEjBxB,EAEJ,MAAO,CACLK,OAAQe,EACRC,MAAOC,EACPC,QAASC,E,CAwBGC,GAEd,IAAK,IAAIC,EAAI,EAAGA,GAAKT,EAAMM,OAAQG,IACjCvB,EAAcuB,EAAGT,EAAMZ,OACpBsB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAF,GAASG,OAAO+B,QAAQ,qBAAqBxB,QAAeC,MAAU,IAEvEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAF,GAASG,OAAOiC,QAAQ,oBAAoB1B,QAAeC,MAAU,IAGzEY,EAAMZ,OAASY,EAAMI,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  pauseOnHover: false,\n});\n\nconst formEl = document.querySelector('.form');\n\nfunction getinputValues(e) {\n  const {\n    elements: {\n      delay: { value: delayValue },\n      step: { value: stepValue },\n      amount: { value: amountValue },\n    },\n  } = formEl;\n\n  return {\n    delay: +delayValue,\n    step: +stepValue,\n    amount: +amountValue,\n  };\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const data = {\n    position,\n    delay,\n  };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      shouldResolve ? resolve(data) : reject(data);\n    }, delay);\n  });\n}\n// Need validation on (number < 0)\n// formEl.addEventListener(\"change\",() => {\n\n// })\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  const input = getinputValues();\n\n  for (let i = 1; i <= input.amount; i++) {\n    createPromise(i, input.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    input.delay += input.step;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","pauseOnHover","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","data","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","input","elements","value","delayValue","step","stepValue","amount","amountValue","$47d4ff9957288465$var$getinputValues","i","then","success","catch","failure"],"version":3,"file":"03-promises.1726fc53.js.map"}