{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,cAAc,IAGhB,IAAMC,EAASC,SAASC,cAAc,SAkBtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAO,CACXL,WACAC,SAGF,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTP,EAAgBK,EAAQF,GAAQG,EAAOH,E,GACtCJ,E,IAOPL,EAAOc,iBAAiB,UAAU,SAAAC,GAChCA,EAAEC,iBAGF,IAFA,IAnCAC,EAmCMC,EA3BC,CACLb,QATFY,EAMIjB,EALFmB,UACEd,MAASe,MAQXC,MAR4BJ,EAC1BI,KAAQD,MAQVE,QAR0BL,EACxBK,OAAUF,OAiCLG,EAAI,EAAGA,GAAKL,EAAMI,OAAQC,IACjCpB,EAAcoB,EAAGL,EAAMb,OACpBmB,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBT,EAAAF,GAASG,OAAO6B,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEuB,OAAM,SAAAH,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBT,EAAAF,GAASG,OAAOgC,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGrEa,EAAMb,OAASa,EAAMG,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  pauseOnHover: false,\n});\n\nconst formEl = document.querySelector('.form');\n\nfunction getinputValues(e) {\n  const {\n    elements: {\n      delay: { value: delayValue },\n      step: { value: stepValue },\n      amount: { value: amountValue },\n    },\n  } = formEl;\n\n  return {\n    delay: +delayValue,\n    step: +stepValue,\n    amount: +amountValue,\n  };\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const data = {\n    position,\n    delay,\n  };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      shouldResolve ? resolve(data) : reject(data);\n    }, delay);\n  });\n}\n// Need validation on (number < 0)\n// formEl.addEventListener(\"change\",() => {\n\n// })\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  const input = getinputValues();\n\n  for (let i = 1; i <= input.amount; i++) {\n    createPromise(i, input.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    input.delay += input.step;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","pauseOnHover","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","data","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","_elements","input","elements","value","step","amount","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.9ebba2b2.js.map"}